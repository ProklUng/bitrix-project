#########
# Twig.
#########

services:
  # конфигурация по умолчанию в *этом* файле
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  # Twig loader
  twig.loader:
    class: Twig_Loader_Filesystem
    arguments: ['%kernel.project_dir%/local/twig/']

  # Twig
  twig:
    class: Local\Services\TwigService
    arguments: ['@twig.loader', '%debug%', '%kernel.project_dir%/bitrix/cache/twig']

  # Экземпляр Twig.
  twig.instance:
    class: Twig_Environment
    factory: ['@twig', 'instance']

  # Рендер по роуту.
  Local\Services\Twig\Tools\TemplateController:
    arguments: ['@twig.instance']

  ##################
  # Twig extensions
  ##################
  debug.extension:
    class: Twig_Extension_Debug
    tags:
      - {name: twig.extension}

  # Супер-глобалы.
  Maximaster\Tools\Twig\PhpGlobalsExtension:
    tags:
      - {name: twig.extension}

  # Битриксовые функции.
  Maximaster\Tools\Twig\BitrixExtension:
    tags:
      - {name: twig.extension}

  # Битриксовые штучки-дрючки.
  bitrix.pieces:
    arguments: ['%kernel.project_dir%']
    class: Local\Services\Twig\Extensions\BitrixPiecesExtension
    tags:
      - { name: twig.extension }

  # Различные хэлперы, связанные с сервис-контейнером.
  Local\Services\Twig\Extensions\ContainerTwigExtension:
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # The "sortByField" filter sorts an array of entries (objects or arrays) by the specified field's value
  # Usage: {% for entry in master.entries|sortbyfield('ordering', 'desc') %}
  Local\Services\Twig\Extensions\SortByFieldExtension:
    tags:
      - { name: twig.extension }

  # Пути роутов.
  Local\Services\Twig\Extensions\RouteExtension:
    arguments: ['@routes.collection', '@parameter_bag']
    tags:
      - { name: twig.extension }

  # controller()
  controller:
    class: Local\Services\Twig\Extensions\ControllerExtension
    tags:
      - { name: twig.extension }

  # render()
  render:
    class: Local\Services\Twig\Extensions\RenderExtension
    arguments:
      - '@Local\SymfonyTools\Framework\Utils\ResolverDependency\ResolveDependencyMakerContainerAware'
      - '@dispatcher.controller'
      - '@routes.collection'
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: twig.extension }

  # Symfony Encore.
  Local\Services\Twig\Extensions\SymfonyEncoreExtension:
    arguments: ['@guta.assets']
    tags:
      - { name: twig.extension }

  # json_decode.
  Local\Services\Twig\Extensions\JsonDecodeExtension:
    tags:
      - { name: twig.extension }